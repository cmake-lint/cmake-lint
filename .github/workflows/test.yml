name: Test

on:
  push:
    branches: [main, dev, cd]
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          ["3.8", "3.9", "3.10", "3.11", "3.12", "pypy-3.9", "pypy-3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: "pip"
          cache-dependency-path: "**/dev-requirements"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          python -m pip install -e .[dev]
          python -m pip install tox tox-gh-actions
      - name: Test with tox
        run: tox
  
  publish-test:
          needs: build-test
          runs-on: ubuntu-latest
          if: github.event_name == 'push' && github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/cd'
          steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.8'
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                python -m pip install --upgrade poetry
            - name: Build and publish
              env:
                TWINE_USERNAME: __token__
                TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}
                CI_COMMIT_MESSAGE: "CI: bump version" 
                CI_COMMIT_AUTHOR: Continuous Integration
              run: |
                poetry version prerelease
                git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
                git config --global user.email "33428955+StStME@users.noreply.github.com"
                git diff
                git add pyproject.toml
                git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
                poetry version -s | xargs -I{} git tag -m "test deploy version {}" "testpypi/{}"
                git push
                poetry config repositories.testpypi https://test.pypi.org/legacy/
                poetry build
                poetry publish -r testpypi 